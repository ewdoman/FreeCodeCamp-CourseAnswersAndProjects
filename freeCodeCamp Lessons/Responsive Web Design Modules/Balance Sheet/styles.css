html {
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    color: #0a0a23;
}

/* select any span element whose class includes sr-only (class screen reader only in this case)*/
/* '!important' overrides ALL previous styling rules for that specific property on that element! */
span[class~="sr-only"] { 

    border: 0 !important;
    height: 1px !important;
    width: 1px !important;

    /*used to define visible portions*/
    clip: rect(1px, 1px, 1px, 1px) !important;

    /*determines shape of visible portions*/
    clip-path: inset(50%) !important; 

    /* next 2 use to avoid text overflow*/
    overflow: hidden !important;
    white-space: nowrap !important;

    /*insures no longer visible or within page view*/
    position: absolute !important;
    padding: 0 !important;
    margin: -1px !important;
}

h1 {
    max-width: 37.25rem;
    margin: 0 auto;
    padding: 1.5rem 1.25rem;
}

h1 .flex {
    display: flex;
    flex-direction: column-reverse;
    gap: 1rem;
}

/*pseudo-selector is used to target the first element that matches the selector*/
/*first span element in .flex container*/
/*Because flex-direction: column-reverse visually the first span element is on the right*/
h1 .flex span:first-of-type {
    font-size: 0.7em;
}

h1 .flex span:last-of-type {
    font-size: 1.2em;
}

section {
    max-width: 40rem;
    margin: 0 auto;
    border: 2px solid #d0d0d5;
}

#years {
    display: flex;
    justify-content: flex-end;
    position: sticky;
    z-index: 999;
    top: 0;
    background: #0a0a23;
    color: #fff;
    padding: 0.5rem calc(1.25rem + 2px) 0.5rem 0;
    margin: 0 -2px;
}

/*targets any span with a class attribute regardless of value*/
#years span[class] {
    font-weight: bold; 
    text-align: right;
    width: 4.5rem;
}

.table-wrap {
    padding: 0 0.75rem 1.5rem 0.75rem;
}

/* Targets all elements that do not match selector, in this case class sr-only */
/* span:not(.sr-only) {
font-weight: normal;
} */

/* using '!important' :not(.sr-only) is no longer needed */
span {
    font-weight: normal;
}

/* allow cell borders to collapse into a single border, instead of a border around each cell */
table {
    border-collapse: collapse;
    border: 0;
    /*use 100% of container width*/
    width: 100%;
    margin-top: 3rem;
    position: relative;
}

table caption {
    color: #356eaf;
    font-size: 1.3em;
    font-weight: normal;
    position: absolute;
    top: -2.25rem;
    left: 0.5rem;
}


tbody td {
    width: 100vw; /* 100 viewport width */
    min-width: 4rem;
    max-width: 4rem;
}

tbody th {
    width: calc(100% - 12rem);
}

/* [attribute="value"] any attribute with value */
tr[class="total"]{
    border-bottom: 4px double #0a0a23;
}

/* targets th elements within your table rows where the class is total */
tr[class="total"] th{
    text-align: left;
    padding: 0.5rem 0 0.25rem 0.5rem;
}


/* The key difference between tr[class="total"] and tr.total 
1st will select tr elements where the only class is total. 
<tr class="total">...</tr> <!-- This will match -->
<tr class="total somethingElse">...</tr> <!-- This will NOT match -->
2nd will select tr elements where the class includes total. 
<tr class="total">...</tr> <!-- This will match -->
<tr class="total somethingElse">...</tr> <!-- This will ALSO match --> */
tr.total td{
    text-align: right;
    padding: 0 0.25rem;
}

tr.total td:nth-of-type(3){
    padding-right: 0.5rem;
}

tr.total:hover {
    background-color: #99c9ff;
}

td.current {
    font-style: italic;
}

tr.data {
    background-image: linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem);
}

tr.data th {
    text-align: left;
    padding-top: 0.3rem;
    padding-left: 0.5rem;
}

tr.data th .description {
    display: block;
    font-weight: normal;
    font-style: italic;
    padding: 1rem 0 0.75rem;
    margin-right: -13.5rem;
}

tr.data td {
    vertical-align: top;
    padding: 0.3rem 0.25rem 0;
    text-align: right;
}

tr.data td:last-of-type
{
    padding: 0 0.5rem 0 0 ;
}

tr.total:hover {
    background-color: #99c9ff;
}

td.current {
    font-style: italic;
}

tr.data {
    background-image: linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem);
}

tr.data th {
    text-align: left;
    padding-top: 0.3rem;
    padding-left: 0.5rem;
}

tr.data th .description {
    display: block;
    font-weight: normal;
    font-style: italic;
    padding: 1rem 0 0.75rem;
    margin-right: -13.5rem;
}

tr.data td {
    vertical-align: top;
    padding: 0.3rem 0.25rem 0;
    text-align: right;
}

tr.data td:last-of-type
{
    padding: 0 0.5rem 0 0 ;
}

tr.total:hover {
    background-color: #99c9ff;
}
  
td.current {
    font-style: italic;
}

tr.data {
    background-image: linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem);
}

tr.data th {
    text-align: left;
    padding-top: 0.3rem;
    padding-left: 0.5rem;
}

tr.data th .description {
    display: block;
    font-weight: normal;
    font-style: italic;
    padding: 1rem 0 0.75rem;
    margin-right: -13.5rem;
}

tr.data td {
    vertical-align: top;
    padding: 0.3rem 0.25rem 0;
    text-align: right;
}

tr.data td:last-of-type
{
    padding: 0 0.5rem 0 0 ;
}